MODULE main
VAR
  state : {ROOT, A1, B1, C1, D1, F1, M1};

ASSIGN
  init(state) := ROOT;

  next(state) := case
    state = ROOT : A1;
    state = A1   : {B1, C1};
    state = B1   : D1;
    state = D1   : F1;
    TRUE : state;
  esac;

CTLSPEC
  AG( state=A1 -> AX ( A [ state=B1 U ( state=D1 -> EX state=F1 ) ] ) );
CTLSPEC
  AG( state=A1 -> AX ( A [ state=B1 U ( state=F1 -> EX state=C1 ) ] ) );
CTLSPEC
  AG( state=A1 -> AX ( A [ state=M1 U ( state=F1 -> EX state=C1 ) ] ) );

--
-- The definition of A[ϕ U ψ] is:
--
--     M, s ⊨ A[ϕUψ] iff for all paths (s, s2,s3, s4, . ..) s.t. si Rt si+1
--     there is a state sj s.t. M, sj ⊨ ψ and M, si ⊨ ϕ for all i < j.
--
-- So, for the property to be verified, ϕ must be true up until when ψ fires.
--
-- Notice that if ψ fires immediately then the value of ϕ is not relevant.
--
-- It is easy to see that all three formulas are trivially verified because
-- ψ is true in the first state of each path starting from B1 and C1. This
-- is the case because ψ is an implication which, in states B1 and C1, has
-- a false premise.
--
-- Since we know that A [ ANYTHING U TRUE ] is verified for any state, we
-- conclude that all three properties are satisfiable.
--
